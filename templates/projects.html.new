{% extends "base.html" %}

{% block content %}
<div class="max-w-7xl mx-auto">
    <div class="flex justify-between items-center mb-8">
        <h1 class="text-2xl font-bold text-gray-800">おすすめの案件一覧</h1>
        <div class="flex items-center space-x-4">
            <div class="relative">
                <select id="sortBy" class="appearance-none bg-white border border-gray-300 rounded-md pl-3 pr-8 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                    <option value="recent">新着順</option>
                    <option value="match">マッチ度順</option>
                    <option value="salary">単価が高い順</option>
                </select>
                <div class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                    <i class="fas fa-chevron-down text-gray-500"></i>
                </div>
            </div>
            <button id="filterBtn" class="flex items-center space-x-2 bg-white border border-gray-300 rounded-md px-3 py-2 text-sm hover:bg-gray-50">
                <i class="fas fa-sliders-h text-gray-500"></i>
                <span>絞り込み</span>
            </button>
        </div>
    </div>

    <!-- フィルターサイドバー -->
    <div id="filterSidebar" class="hidden fixed inset-0 z-50 overflow-hidden">
        <div class="absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>
        <div class="fixed inset-y-0 right-0 pl-10 max-w-full flex">
            <div class="w-screen max-w-md">
                <div class="h-full flex flex-col bg-white shadow-xl overflow-y-scroll">
                    <div class="flex-1 py-6 overflow-y-auto px-4 sm:px-6">
                        <div class="flex items-start justify-between">
                            <h2 class="text-lg font-medium text-gray-900">条件で絞り込む</h2>
                            <div class="ml-3 h-7 flex items-center">
                                <button id="closeFilter" class="-m-2 p-2 text-gray-400 hover:text-gray-500">
                                    <span class="sr-only">Close panel</span>
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>

                        <div class="mt-8">
                            <div class="space-y-8">
                                <!-- スキルで絞り込み -->
                                <div>
                                    <h3 class="text-sm font-medium text-gray-700 mb-3">スキル</h3>
                                    <div class="mt-1">
                                        <input type="text" id="skillFilter" placeholder="例: Python, React" class="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500">
                                    </div>
                                    <div id="selectedSkills" class="flex flex-wrap gap-2 mt-2">
                                        <!-- 選択されたスキルがここに表示されます -->
                                    </div>
                                </div>

                                <!-- 勤務地で絞り込み -->
                                <div>
                                    <h3 class="text-sm font-medium text-gray-700 mb-3">勤務地</h3>
                                    <div class="space-y-2">
                                        <label class="flex items-center">
                                            <input type="checkbox" name="location" value="東京" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">東京</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="location" value="大阪" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">大阪</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="location" value="名古屋" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">名古屋</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="location" value="福岡" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">福岡</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="location" value="リモート" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">リモート可</span>
                                        </label>
                                    </div>
                                </div>

                                <!-- 単価で絞り込み -->
                                <div>
                                    <h3 class="text-sm font-medium text-gray-700 mb-3">希望単価（月額）</h3>
                                    <div class="grid grid-cols-2 gap-4">
                                        <div>
                                            <label for="minSalary" class="block text-sm font-medium text-gray-500 mb-1">下限</label>
                                            <div class="relative rounded-md shadow-sm">
                                                <input type="number" id="minSalary" class="focus:ring-blue-500 focus:border-blue-500 block w-full pl-3 pr-12 sm:text-sm border-gray-300 rounded-md" placeholder="0">
                                                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                                    <span class="text-gray-500 sm:text-sm">万円</span>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <label for="maxSalary" class="block text-sm font-medium text-gray-500 mb-1">上限</label>
                                            <div class="relative rounded-md shadow-sm">
                                                <input type="number" id="maxSalary" class="focus:ring-blue-500 focus:border-blue-500 block w-full pl-3 pr-12 sm:text-sm border-gray-300 rounded-md" placeholder="999">
                                                <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                                    <span class="text-gray-500 sm:text-sm">万円</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- 雇用形態 -->
                                <div>
                                    <h3 class="text-sm font-medium text-gray-700 mb-3">雇用形態</h3>
                                    <div class="space-y-2">
                                        <label class="flex items-center">
                                            <input type="checkbox" name="employment" value="contract" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">契約社員</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="employment" value="permanent" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">正社員</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" name="employment" value="freelance" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">フリーランス</span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="border-t border-gray-200 px-4 py-6 sm:px-6">
                        <div class="flex justify-between">
                            <button id="resetFilters" class="text-sm font-medium text-gray-500 hover:text-gray-600">
                                リセット
                            </button>
                            <button id="applyFilters" class="bg-blue-600 border border-transparent rounded-md shadow-sm py-2 px-4 text-sm font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                適用する
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- プロジェクト一覧 -->
    <div id="projectsList" class="space-y-6">
        <!-- プロジェクトカードがここに動的に挿入されます -->
        <div class="text-center py-12" id="loadingIndicator">
            <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto"></div>
            <p class="mt-4 text-gray-600">プロジェクトを読み込んでいます...</p>
        </div>
    </div>

    <!-- ページネーション -->
    <div class="mt-10 flex justify-center">
        <nav class="inline-flex rounded-md shadow -space-x-px">
            <a href="#" class="px-3 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                <span class="sr-only">前へ</span>
                <i class="fas fa-chevron-left"></i>
            </a>
            <a href="#" class="px-4 py-2 border-t border-b border-gray-300 bg-blue-50 text-blue-600 text-sm font-medium">1</a>
            <a href="#" class="px-4 py-2 border-t border-b border-gray-300 bg-white text-gray-700 hover:bg-gray-50 text-sm font-medium">2</a>
            <a href="#" class="px-4 py-2 border-t border-b border-gray-300 bg-white text-gray-700 hover:bg-gray-50 text-sm font-medium">3</a>
            <span class="px-4 py-2 border-t border-b border-gray-300 bg-white text-gray-500 text-sm font-medium">...</span>
            <a href="#" class="px-4 py-2 border-t border-b border-gray-300 bg-white text-gray-700 hover:bg-gray-50 text-sm font-medium">10</a>
            <a href="#" class="px-3 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                <span class="sr-only">次へ</span>
                <i class="fas fa-chevron-right"></i>
            </a>
        </nav>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // フィルターサイドバーの表示/非表示
    const filterBtn = document.getElementById('filterBtn');
    const closeFilter = document.getElementById('closeFilter');
    const filterSidebar = document.getElementById('filterSidebar');
    const applyFilters = document.getElementById('applyFilters');
    const resetFilters = document.getElementById('resetFilters');
    
    filterBtn.addEventListener('click', function() {
        filterSidebar.classList.remove('hidden');
    });
    
    closeFilter.addEventListener('click', function() {
        filterSidebar.classList.add('hidden');
    });
    
    applyFilters.addEventListener('click', function() {
        // ここでフィルターを適用する処理を実装
        filterSidebar.classList.add('hidden');
        // フィルター適用時の処理（API呼び出しなど）
    });
    
    resetFilters.addEventListener('click', function() {
        // すべてのチェックボックスをリセット
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');
        checkboxes.forEach(checkbox => {
            checkbox.checked = false;
        });
        
        // テキスト入力フィールドをリセット
        document.getElementById('skillFilter').value = '';
        document.getElementById('minSalary').value = '';
        document.getElementById('maxSalary').value = '';
        
        // 選択されたスキルをクリア
        document.getElementById('selectedSkills').innerHTML = '';
    });
    
    // スキルフィルターの入力処理
    const skillFilter = document.getElementById('skillFilter');
    const selectedSkills = document.getElementById('selectedSkills');
    
    skillFilter.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ',') {
            e.preventDefault();
            const skill = this.value.trim().replace(/,/g, '');
            if (skill) {
                addSkill(skill);
                this.value = '';
            }
        }
    });
    
    function addSkill(skill) {
        if (!skill) return;
        
        const skillTag = document.createElement('span');
        skillTag.className = 'inline-flex items-center bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded';
        skillTag.innerHTML = `
            ${skill}
            <button type="button" class="ml-1.5 text-blue-500 hover:text-blue-700">
                <i class="fas fa-times"></i>
            </button>
        `;
        
        const removeBtn = skillTag.querySelector('button');
        removeBtn.addEventListener('click', function() {
            skillTag.remove();
        });
        
        selectedSkills.appendChild(skillTag);
    }
    
    // ソート機能
    const sortBy = document.getElementById('sortBy');
    sortBy.addEventListener('change', function() {
        // ここでソート処理を実装
        console.log('Sort by:', this.value);
        // APIを呼び出して並び替えたり、フロントエンドで並び替えたりする
    });
    
    // プロジェクト一覧を取得
    fetch('/projects')
        .then(response => {
            if (!response.ok) {
                throw new Error('プロジェクトの取得に失敗しました');
            }
            return response.json();
        })
        .then(data => {
            if (data.status === 'success' && data.data && data.data.length > 0) {
                displayProjects(data.data);
            } else {
                showNoProjectsMessage();
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showErrorMessage(error.message);
        });

    // プロジェクトを表示する関数
    function displayProjects(projects) {
        const projectsList = document.getElementById('projectsList');
        const loadingIndicator = document.getElementById('loadingIndicator');
        
        if (loadingIndicator) {
            loadingIndicator.remove();
        }

        if (!projects || projects.length === 0) {
            showNoProjectsMessage();
            return;
        }

        projectsList.innerHTML = projects.map(project => `
            <div class="project-card bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-shadow duration-300">
                <div class="p-6">
                    <div class="flex justify-between items-start">
                        <div>
                            <h2 class="text-xl font-bold text-gray-900 mb-1">${project.project_name || '無題の案件'}</h2>
                            <p class="text-sm text-gray-500 mb-4">${project.client_name || ''}</p>
                        </div>
                        <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded">
                            ${project.work_type || 'その他'}
                        </span>
                    </div>
                    
                    <p class="text-gray-600 mb-4">${project.description || '説明はありません'}</p>
                    
                    ${project.required_skill_names ? `
                        <div class="mb-4">
                            <h3 class="text-sm font-medium text-gray-700 mb-2">必須スキル</h3>
                            <div class="flex flex-wrap gap-2">
                                ${project.required_skill_names.split(',').map(skill => 
                                    `<span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded">
                                        ${skill.trim()}
                                    </span>`
                                ).join('')}
                            </div>
                        </div>
                    ` : ''}
                    
                    <div class="flex justify-between items-center mt-6 pt-4 border-t border-gray-100">
                        <div class="text-sm text-gray-500">
                            <span class="flex items-center">
                                <i class="fas fa-map-marker-alt mr-1"></i>
                                ${project.location || '場所未指定'}
                            </span>
                            ${project.min_budget || project.max_budget ? `
                                <span class="ml-2">|</span>
                                <span class="ml-2 font-semibold">
                                    ${project.min_budget ? `¥${Number(project.min_budget).toLocaleString()}` : ''}
                                    ${project.max_budget ? `〜¥${Number(project.max_budget).toLocaleString()}` : ''}
                                </span>
                            ` : ''}
                        </div>
                        <a href="/project/${project.id}" class="text-blue-600 hover:text-blue-800 font-medium flex items-center">
                            詳細を見る <i class="fas fa-chevron-right ml-1 text-sm"></i>
                        </a>
                    </div>
                </div>
            </div>
        `).join('');
    }

    // プロジェクトがない場合のメッセージを表示
    function showNoProjectsMessage() {
        const projectsList = document.getElementById('projectsList');
        projectsList.innerHTML = `
            <div class="text-center py-12">
                <i class="fas fa-inbox text-4xl text-gray-300 mb-3"></i>
                <p class="text-gray-500">表示するプロジェクトがありません</p>
            </div>
        `;
    }

    // エラーメッセージを表示
    function showErrorMessage(message) {
        const projectsList = document.getElementById('projectsList');
        projectsList.innerHTML = `
            <div class="bg-red-50 border-l-4 border-red-400 p-4">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle text-red-400"></i>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">
                            ${message || 'エラーが発生しました。時間をおいて再度お試しください。'}
                        </p>
                    </div>
                </div>
            </div>
        `;
    }
});
</script>

{% endblock %}
